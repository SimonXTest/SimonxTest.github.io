[ { "title": "Installing Openwrt", "url": "/posts/Installing-OpenWRT/", "categories": "", "tags": "", "date": "2021-10-13 00:00:00 -0400", "snippet": "Installing OpenWRT Into my Network, with TinyProxy, VPN, And Pi-Hole.I replaced the stock firmware from my router with OpenWRT, this provides me a lot more control over my router, and allows me to learn more about managing a network.The first thing I did was perform dns hijacking against myself. This is because applications were able to bypass my Pi-Hole local dns resolver. Pi-Hole is a local dns resolver that provides security and a better browsing experience to all my devices in my network. Being able to bypass my dns resolver allows bad actors to perform dns hijacking attacks, and send requests that are meant to be blocked in my network. The requests blocked by my Pi-Hole device are malware, tracking from websites I am not familiar with, and advertisements. To perform dns hijacking, I had to make sure that every request sent from port 53 (the port used for dns requests) is instead forwarded by my router to my local dns. I also had to prohibit dns over https addresses in my network, since those don’t use port 53 and are able to bypass my dns. There is a guide on the openwrt forums on how to do this here https://openwrt.org/docs/guide-user/firewall/fw3_configurations/intercept_dnsI also wanted to have a vpn on my router. This helps prevent leaks, from malfunction or an application trying to bypass it. I created a separate network on openwrt, to not force everyone to be connected to my vpn. I had a problem with my vpn network being too slow to resolve addresses. To solve this I had to connect my dns resolver to the new network, change firewall rules to allow input between both networks, and perform dns hijacking on the new network. Tinyproxy was also installed to allow only some apps to bypass my vpn (example: online banking applications and websites)I might make an image that shows how my network structure looks like. It would not be relevant in any way, but it would still be good filler image." }, { "title": "Pihole Traffic Analysis", "url": "/posts/PiHole-Traffic-Analysis/", "categories": "", "tags": "", "date": "2021-10-12 00:00:00 -0400", "snippet": "Analyzing Traffic With Pi-Hole and Proxifier.Proxifier showed me the currently active connections that applications were running in the background, and what applications were responsible. It made me learn more about my applications since I looked them up online, and if I didn’t need those connections I would block them.With pihole I had a lot more control to learn about what domains can be commonly found when I am web browsing, and what they were doing. I am familiar with many of these domains now. I purposely implemented a strict policy on my pihole, making it block 5 million domains by default, just so I would be forced to learn what each domain was doing, why they were blocked, and what features would it be breaking.If you are not familiar with Pi-Hole and Proxifier, here’s how they look like:These are all the addresses that had been resolved by my local dns resolver. It also shows if these addresses have been blocked or allowedProxifier shows all the active connections on my computer, and also maintains a log of every connection that has been done previously. It’s very useful" }, { "title": "Pygame Mod", "url": "/posts/Pygame-Mod/", "categories": "", "tags": "", "date": "2021-10-11 00:00:00 -0400", "snippet": "Pygame Slide Puzzle ModI had a simple college assignment to make a modified version of a Pygame called Slide Puzzle (by Al Sweigart). This pygame only works on Windows. (Install with “pip install pypiwin32”, for any win32api issues use Google)How to play: The board is a 4x4 grid with fifteen tiles (numbered 1 through 15 going left to right) and one blank space. The tiles start out in random positions, and the player must slide tiles around until the tiles are back in their original order.Download here for WindowsDownload here for cross-platformPlay online on Replit hereRead source code hereOriginal PygameA preview can be seen below.List of modifications A scoring system Redesign, night mode friendly Full screen (Missing online, Windows Exclusive) Background music (Missing online) Mute music (Press M) (Missing online) Ability to change the volume (Missing online) Sound effects when moving tiles (Missing online) An easter egg / secret (Press w 10 times). This won’t affect your score. You can’t disable the secret once unlocked (Missing online)You can also change the difficulty by changing BOARDWIDTH and BOARDHEIGHT in the code. This is a feature from the original pygame, not the mod.A version that is compatible with all operating systems that support pygame could be made if the ability to full screen was removed." }, { "title": "Live Obs Camera", "url": "/posts/Live-OBS-Camera/", "categories": "", "tags": "", "date": "2021-10-09 00:00:00 -0400", "snippet": "Making a Live Security Camera with OBS.In December 2019, I was committed to turning my old mobile device into a live security camera. Simply because I was bored. This could be done simply with two applications, obs and droidcam, droidcam would send the camera feed from my phone to obs. The only problem now is that obs is made to livestream to the internet. I had to learn how to make my server accessible only to devices in my own home. I was first suggested to use nginx, sadly this method was not intuitive because this method uses rtmp for streaming, it was not supported in some browsers, devices, and video players. I then found I could make a local live stream recording into a location on my device, using the apple http live streaming format (hls), and then I could make an apache server share the live feed. A problem though was that the recordings were not good, the one hour footage was divided in many .ts files that lasted only a few seconds. I created multiple scripts, one python script renamed the files so they were numbered, starting with 1. Then I used ffmpeg to combine them all into one file (concatenating them together). To save on storage space, I also used the handbrake command line to re-encode the files, reduce file size, and make sure they don’t suffer any compatibility issues. Finally a final command is executed to rename the finished video file into something that includes the date and time it was recorded. This is done every few hours by a script that OBS opens when the recording stops, though if I preferred I could make it so it happens every day at 2:00am (for storage and testing purposes, it’s every few hours).This project involved PowerShell, Python, HTML5, and Bash knowledge. It also used cli software such as FFMPEG, and HandBrake. And used gui applications such as OBS, and DroidCam. In this link you can see some of the scripts I used and what my camera looks like https://drive.google.com/drive/folders/10rj730U0ReVNVWSM5GptY4WZM5XcecLE?usp=sharing (note: I considered uploading them on Github, but it would be very inconvenient for me to update, and very inconvenient for you to download and implement on your apache server. Copyright might make it more complicated as well)Gimp an image of my old phone. (in progress)" }, { "title": "Jupyter Notebook", "url": "/posts/Jupyter-Notebook/", "categories": "", "tags": "", "date": "2021-10-08 00:00:00 -0400", "snippet": "Analyzing and Comparing data with Jupyter NotebookI was taught to use Juniper Notebook in order to compare data and suggest what application a company should develop, in order to get the most benefit. There are three sets of instructions on how to do the assignment. The summarized version is heavily edited by me. The chippy version has some edits. The normal version is the original one given by my professorYou can see my ipython notebook hereFind data samples an dother relevant files here" }, { "title": "1stpentesting", "url": "/posts/1stPenTesting/", "categories": "", "tags": "", "date": "2021-10-07 00:00:00 -0400", "snippet": "Penetration TestingThe link provides my penetration testing knowledge, some of these skills are red team, and others are blue team. This includes the use of Scapy, SQL Injections, Nmap, MetaSploit and Snort. I had an amazing professor throughout this courseClick this link to read the documents: https://drive.google.com/drive/folders/1CZX14G-fjC_KIVm4tGU3SZ4I0lZQKByz?usp=sharingThe professor’s name along with other information was redacted for privacy reasons, in case of it being requested by the professor on the syllabus. (I don’t have access to the syllabus anymore, so I wouldn’t know). Everything shown on these documents was done in a controlled environment.This can probably be hosted on the site, I should consider figuring out how to do this" }, { "title": "Blog Post Title From File Name", "url": "/posts/blog-post-title-from-file-name/", "categories": "", "tags": "", "date": "2021-03-08 00:00:00 -0500", "snippet": "Blog Post Title From First HeaderDue to a plugin called jekyll-titles-from-headings which is supported by GitHub Pages by default. The above header (in the markdown file) will be automatically used as the pages title.If the file does not start with a header, then the post title will be derived from the filename.This is a sample blog post. You can talk about all sorts of fun things here.This is a headerSome T-SQL CodeSELECT This, [Is], A, Code, Block -- Using SSMS style syntax highlighting , REVERSE(&#39;abc&#39;)FROM dbo.SomeTable s CROSS JOIN dbo.OtherTable o;Some PowerShell CodeWrite-Host &quot;This is a powershell Code block&quot;;# There are many other languages you can use, but the style has to be loaded firstForEach ($thing in $things) { Write-Output &quot;It highlights it using the GitHub style&quot;}" } ]
